// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// index
Rcpp::NumericVector index(Rcpp::List content, Rcpp::String indexName);
RcppExport SEXP _geonamesr_index(SEXP contentSEXP, SEXP indexNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type content(contentSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type indexName(indexNameSEXP);
    rcpp_result_gen = Rcpp::wrap(index(content, indexName));
    return rcpp_result_gen;
END_RCPP
}
// indexBulk
Rcpp::LogicalVector indexBulk(Rcpp::ListOf<Rcpp::List> content, Rcpp::String indexName);
RcppExport SEXP _geonamesr_indexBulk(SEXP contentSEXP, SEXP indexNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::List> >::type content(contentSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type indexName(indexNameSEXP);
    rcpp_result_gen = Rcpp::wrap(indexBulk(content, indexName));
    return rcpp_result_gen;
END_RCPP
}
// search
Rcpp::List search(Rcpp::String queryText, int maxItems, Rcpp::String indexName);
RcppExport SEXP _geonamesr_search(SEXP queryTextSEXP, SEXP maxItemsSEXP, SEXP indexNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type queryText(queryTextSEXP);
    Rcpp::traits::input_parameter< int >::type maxItems(maxItemsSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type indexName(indexNameSEXP);
    rcpp_result_gen = Rcpp::wrap(search(queryText, maxItems, indexName));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geonamesr_index", (DL_FUNC) &_geonamesr_index, 2},
    {"_geonamesr_indexBulk", (DL_FUNC) &_geonamesr_indexBulk, 2},
    {"_geonamesr_search", (DL_FUNC) &_geonamesr_search, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_geonamesr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
